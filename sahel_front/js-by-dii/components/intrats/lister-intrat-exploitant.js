import { AddFormHtml, div, attribute, section, header, table, tbody, tr, th, i, td } from "../../configs/html-element.js"
import { Post } from "../../configs/requette.js";
import BaseTemplate from "../base-template/template.js";
import Navbar from "../navbar.js";
import Aside from "../aside-nav.js";

export default class ListerIntratExploitant extends HTMLElement {

    constructor() { super() }

    static _create = () => {
        const tabs = [{ titre: 'Matricule Exploitant' }];

        return AddFormHtml('Lister Charge Exploitant ', tabs, this._listIntratExploitantEvents);
    }

    static _listIntratExploitantEvents = e => {
        e.preventDefault();

        const matricule = e.target.getElementsByTagName('input')[0].value;

        const body = { matricule };

        Post('intrat/liste-intrat-exploitant', body).then((result) => {
            
            if (result.statusCode === 200) {
                
                BaseTemplate.body(Navbar._create(), Aside._create(), this._tabsChamps(result.data[0]));
                //console.log(result.data[0]);

            } else {
                GestionErr.affiche_err(e.target, 'Erreur Membres Non Trouvé ', 'danger');
            }

        }).catch((err) => {
            console.log(err);

        });

    }

    static _tabsChamps = (data) => {
        let _div = div();
        _div = attribute(_div, 'class', 'row');

        let __div = div();

        __div = attribute(__div, 'class', 'col-lg-12');

        let _section = section();

        _section = attribute(_section, 'class', 'panel');

        let _header = header();

        _header = attribute(_header, 'class', 'panel-heading');

        _header.innerHTML = `Liste des Intrats de Mr ${data.membres[0].prenom} ${data.membres[0].prenom}`;

        _section.appendChild(_header);

        let _table = table();

        _table = attribute(_table, 'class', 'table table-striped table-advance table-hover');

        let _tbody = tbody();

        let _tr = tr();

        let numero_parcelle = th();
        let demande = th();
        let recu = th();
        let utilise = th();
        let designation = th();
        let prix_unitaire = th();
        let prix_totale = th();
        let total_general = th();
        let params = th();

        numero_parcelle.innerHTML = ' <i class="icon_profile"></i>  Numero Parcelle';
        demande.innerHTML = ' <i class="icon_calendar"></i> Quantite Demande ';
        recu.innerHTML = ' <i class="icon_calendar"></i> Quantite Recu ';
        utilise.innerHTML = ' <i class="icon_calendar"></i> Quantite Utilise ';
        designation.innerHTML = '<i class="icon_cogs"></i> Designation';
        prix_unitaire.innerHTML = '<i class="fas fa-map-marked-alt"></i> Prix Kilogramme';
        prix_totale.innerHTML = '<i class="fas fa-map-marked-alt"></i> Prix Totale';
        total_general.innerHTML = '<i class="fas fa-map-marked-alt"></i>Prix Totale Général';
        params.innerHTML = '<i class="icon_cogs"></i> Paramétres';

        _tr.appendChild(numero_parcelle);
        _tr.appendChild(demande);
        _tr.appendChild(recu);
        _tr.appendChild(utilise);
        _tr.appendChild(designation);
        _tr.appendChild(prix_unitaire);
        _tr.appendChild(prix_totale);
        _tr.appendChild(total_general);
        _tr.appendChild(params);

        _tbody.appendChild(_tr);

        this._TrTd(data).forEach(element => {
            _tbody.appendChild(element);
        });
        let __tr = tr();
        let _numero_parcelle = td();
        let _demande = td();
        let _recu = td();
        let _utilise = td();
        let _designation = td();
        let _prix_unitaire = td();
        let _prix_totale = td();
        let _total_general = td();
        let _params = td();


        _numero_parcelle.innerHTML = '';
        _demande.innerHTML = '';
        _recu.innerHTML = '';
        _utilise.innerHTML = '';
        _designation.innerHTML = '';
        _prix_unitaire.innerHTML = '';
        _prix_totale.innerHTML = 'Total Général';
        _total_general.innerHTML = `${this.getTotal(data)} FCFA`;
        _params.innerHTML = '';

        __tr.appendChild(_numero_parcelle);
        __tr.appendChild(_demande);
        __tr.appendChild(_recu);
        __tr.appendChild(_utilise);
        __tr.appendChild(_designation);
        __tr.appendChild(_prix_unitaire);
        __tr.appendChild(_prix_totale);
        __tr.appendChild(_total_general);
        __tr.appendChild(_params);

        _tbody.appendChild(__tr);

        _table.appendChild(_tbody);
        __div.appendChild(_section);
        __div.appendChild(_table);

        _div.appendChild(__div);
        return _div;
    }

    static _TrTd = (tabs) => {
        let tabTR = [];

        console.log(tabs);

        //let total = 0;

        tabs.intrats.forEach(element => {
            let _tr = tr();
            let numero_parcelle = th();
            let demande = td();
            let recu = td();
            let utilise = td();
            let designation = td();
            let prix_unitaire = td();
            let prix_totale = td();
            let total_general = td();
            let params = td();
            numero_parcelle.innerHTML = `${tabs.matricule}`;

            demande.innerHTML = `${element.intratAgricole.quantite_demande}`;
            recu.innerHTML = `${element.intratAgricole.quantite_recu}`;
            utilise.innerHTML = `${element.intratAgricole.quantite_utilise}`;

            designation.innerHTML = `${element.designation}`
            prix_unitaire.innerHTML = `${element.intratAgricole.prix_kilo} FCFA`;
            prix_totale.innerHTML = `${parseInt(element.intratAgricole.quantite_recu) * parseInt(element.intratAgricole.prix_kilo)} FCFA`;
            //total += parseInt(element.chargeAgricole.nbre_quantite) * parseInt(element.chargeAgricole.prix_unitaire);


            params.innerHTML = `
            <div class="btn-group">
                <a class="btn btn-primary" onClick ="alert('ici on click')" href="#"><i class="icon_plus_alt2"></i></a>
                <a class="btn btn-success"  onClick = "alert('ici on click')" href="#"><i class="icon_check_alt2"></i></a>
                <a class="btn btn-danger"  onClick = "alert('ici on click')" href="#"><i class="icon_close_alt2"></i></a>
            </div>
            `;

            _tr.appendChild(numero_parcelle);
            _tr.appendChild(demande);
            _tr.appendChild(recu);
            _tr.appendChild(utilise);
            _tr.appendChild(designation);
            _tr.appendChild(prix_unitaire);
            _tr.appendChild(prix_totale);
            _tr.appendChild(total_general);
            _tr.appendChild(params);

            tabTR.push(_tr);
        });

       // console.log(total);


        return tabTR;
    }

    static getTotal = (tabs) => {
        let total = 0;

        tabs.intrats.forEach(element => {
            total += parseInt(element.intratAgricole.quantite_recu) * parseInt(element.intratAgricole.prix_kilo);
        });

        return total;
    }

};
